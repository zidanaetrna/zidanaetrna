name: Generate Snake
on:
  schedule:
    - cron: "0 */12 * * *" # Runs every 12 hours
  workflow_dispatch: # Allows manual triggering
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Check out the repository with a token for pushing, fetch full history
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0 # Fetch full history, not a shallow clone
      # Generate the snake SVG using Platane/snk
      - uses: Platane/snk@v3
        with:
          github_user_name: zidanaetrna
          outputs: |
            output/snake.svg?color_snake=orange&color_dots=#bfd6f6,#8db0fe,#64a5f6,#4a91f2,#3b82f6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Avoid API rate limits
      # Commit and push the generated SVG to the repository
      - name: Commit and push snake.svg
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          # Pull the latest changes and rebase, with error handling
          if ! git pull origin main --rebase; then
            echo "Rebase failed, attempting to resolve conflicts..."
            git rebase --abort # Abort the rebase if it fails
            git fetch origin
            git reset --hard origin/main # Reset to the latest remote state
            git add .
            git commit -m "Update snake animation after conflict resolution" || echo "No changes to commit after conflict resolution"
          else
            git add .
            git commit -m "Update snake animation" || echo "No changes to commit"
          fi
          git push
